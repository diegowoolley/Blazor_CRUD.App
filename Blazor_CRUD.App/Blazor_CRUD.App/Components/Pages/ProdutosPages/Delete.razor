@page "/produtos/delete"
@using Microsoft.EntityFrameworkCore
@using BlazorCRUD.App.Data
@inject IDbContextFactory<Blazor_CRUD.App.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Remover Produto</PageTitle>

<h1>

    <img src="32officeicons-3_89720.png" alt="Remover Produto" height="40" width="40" />

</h1>

<p>Deseja mesmo remover esse produto?</p>
<div>
  
    <hr />
    @if (produtos is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Cod_Barras</dt>
            <dd class="col-sm-10">@produtos.Cod_Barras</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Descricao</dt>
            <dd class="col-sm-10">@produtos.Descricao</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Id_categoria</dt>
            <dd class="col-sm-10">@produtos.Id_categoria</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Un_Medida</dt>
            <dd class="col-sm-10">@produtos.Un_Medida</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Quantidade</dt>
            <dd class="col-sm-10">@produtos.Quantidade</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Id_fornecedor</dt>
            <dd class="col-sm-10">@produtos.Id_fornecedor</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Peso_Medio</dt>
            <dd class="col-sm-10">@produtos.Peso_Medio</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Peso_bruto</dt>
            <dd class="col-sm-10">@produtos.Peso_bruto</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Valor_Compra</dt>
            <dd class="col-sm-10">@produtos.Valor_Compra</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Margem_Lucro</dt>
            <dd class="col-sm-10">@produtos.Margem_Lucro</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Valor_Venda</dt>
            <dd class="col-sm-10">@produtos.Valor_Venda</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">estoque_min</dt>
            <dd class="col-sm-10">@produtos.estoque_min</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">estoque_max</dt>
            <dd class="col-sm-10">@produtos.estoque_max</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Foto</dt>
            <dd class="col-sm-10">@produtos.Foto</dd>
        </dl>
        <EditForm method="post" Model="produtos" OnValidSubmit="DeleteProdutos" FormName="delete" Enhance>

            <button type="submit" class="btn me-3" disabled="@(produtos is null)">

                <img src="32officeicons-3_89720.png" alt="Remover produto" height="30" width="30" />    

            </button> 
            <a href="/produtos">
                
            
                <img src="go-back256_24856.png" alt="Voltar a Lista"  height="30" width="30"/>
            
            </a>
        </EditForm>
    }
</div>

@code {
    private Produtos? produtos;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        produtos = await context.Produtos.FirstOrDefaultAsync(m => m.Id == Id);

        if (produtos is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteProdutos()
    {
        using var context = DbFactory.CreateDbContext();
        context.Produtos.Remove(produtos!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/produtos");
    }
}
