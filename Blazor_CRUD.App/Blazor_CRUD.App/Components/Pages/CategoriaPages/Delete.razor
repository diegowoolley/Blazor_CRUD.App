@page "/categoria/delete"
@using Microsoft.EntityFrameworkCore
@using Blazor_CRUD.App.Data
@inject IDbContextFactory<Blazor_CRUD.App.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Remover Categoria</PageTitle>

<h1>

    <img src="32officeicons-3_89720.png" alt="Remover Categoria" height="50" width="50" />

</h1>

<p>Deseja mesmo remover essa categoria?</p>
<div class="card shadow-lg mb-4">
    <div class="card-header bg-danger text-white">
        <h5 class="mb-0">Remover Categoria</h5>
    </div>
    <div class="card-body">
        @if (categoria is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <dl class="row">
                <dt class="col-sm-2">Nome</dt>
                <dd class="col-sm-10">@categoria.Nome</dd>
            </dl>
            <EditForm method="post" Model="categoria" OnValidSubmit="DeleteCategoria" FormName="delete" Enhance>
                <div class="card-footer text-end">
                    <button type="submit" class="btn me-4" disabled="@(categoria is null)" title="Remover">

                        <img src="32officeicons-3_89720.png" alt="Remover Categoria" height="30" width="30" />

                    </button>
                    <a class="btn me-3" href="/categoria">

                        <img src="go-back256_24856.png" alt="Voltar para a Lista" height="30" width="30" />

                    </a>
                </div>
            </EditForm>

        }
    </div>
</div>

@code {
    private Categoria? categoria;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        categoria = await context.Categoria.FirstOrDefaultAsync(m => m.Id == Id);

        if (categoria is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteCategoria()
    {
        using var context = DbFactory.CreateDbContext();
        context.Categoria.Remove(categoria!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/categoria");
    }
}
