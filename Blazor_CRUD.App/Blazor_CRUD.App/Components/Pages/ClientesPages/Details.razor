@page "/clientes/details"
@using Microsoft.EntityFrameworkCore
@using BlazorCRUD.App.Data
@inject IDbContextFactory<Blazor_CRUD.App.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Detalhes</PageTitle>

<p>

    <img src="Details-80_icon-icons.com_57338.png" alt="Detalhes de clientes"  height="50" width="50"/>

</p>

<div>
    
    <hr />
    @if (clientes is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@clientes.Nome</dd>
            <dt class="col-sm-2">Documento</dt>
            <dd class="col-sm-10">@clientes.Documento</dd>
        </dl>
        <div>
            <a class="btn me-3" href="@($"/clientes/edit?id={clientes.Id}")">
                
            <img src="Edit_User-80_icon-icons.com_57329.png" alt="Editar cliente" height="30" width="30" />
            
            </a> 
            <a href="@($"/clientes")">
                
            <img src="go-back256_24856.png" alt="Voltar para Lista" height="30" width="30"/>
            
            </a>
        </div>
    }
</div>

@code {
    private Clientes? clientes;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        clientes = await context.clientes.FirstOrDefaultAsync(m => m.Id == Id);

        if (clientes is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
